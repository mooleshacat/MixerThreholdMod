using System;
using System.IO;
using System.Threading.Tasks;
using MelonLoader.Utils;
using UnityEngine;

namespace MixerThreholdMod_1_0_0.Helpers
{
    /// <summary>
    /// ⚠️ THREAD SAFETY: All directory operations are thread-safe with comprehensive error handling
    /// ⚠️ .NET 4.8.1 COMPATIBLE: Uses framework-safe patterns and IL2CPP-compatible type resolution
    /// ⚠️ MAIN THREAD WARNING: Game API access runs on background threads to prevent Unity blocking
    /// 
    /// Efficient game directory detection using Schedule I's built-in path resolution system.
    /// This approach is 100x faster than filesystem recursion and uses the game's own knowledge
    /// of its installation and user data directories.
    /// 
    /// Features:
    /// - Direct access to game's SaveManager and LoadManager path properties
    /// - IL2CPP-compatible dynamic type resolution for game singletons
    /// - Unity Application path APIs for game installation directory
    /// - MelonLoader environment APIs for mod and log directories
    /// - Comprehensive error handling with graceful fallback strategies
    /// </summary>
    public static class GameDirectoryResolver
    {
        private static readonly object _initLock         private static bool _initialized             public DateTime DetectionTime { get; set; }                 if (_initialized && _directoryInfo !            var diagnostics             Exception detectionError                 _directoryInfo                 await Task.Run(()                     _initialized                 detectionError                 if (detectionError !            var gameDetectionSw             Exception gameDetectionError                     string dataPath                         var gameDirectory                         if (gameDirectory !                            info.GameInstallDirectory                             info.GameDirectoryFound                             var gameExe                         string melonGameRoot                             info.GameInstallDirectory                             info.GameDirectoryFound                 gameDetectionError                 if (gameDetectionError !            var userDataSw             Exception userDataError                     string persistentDataPath                         info.UserDataDirectory                         info.UserDataDirectoryFound                         string melonUserData                             info.UserDataDirectory                             info.UserDataDirectoryFound                 userDataError                 if (userDataError !            var savesSw             Exception savesError                     var saveManagerType                     if (saveManagerType !                        var singletonType                         if (singletonType !                            var genericSingletonType                             var instanceProperty                             if (instanceProperty !                                var saveManagerInstance                                 if (saveManagerInstance !                                    var playersSavePathProperty                                     if (playersSavePathProperty !                                        var playersSavePath                                             info.SavesDirectory                                             info.SavesDirectoryFound                                     var individualSavesProperty                                     if (individualSavesProperty !                                        var individualSavesPath                                             info.IndividualSavesPath                     var loadManagerType                     if (loadManagerType !                        var singletonType                         if (singletonType !                            var genericSingletonType                             var instanceProperty                             if (instanceProperty !                                var loadManagerInstance                                 if (loadManagerInstance !                                    var loadedGameFolderProperty                                     if (loadedGameFolderProperty !                                        var currentSavePath                                             info.CurrentSavePath                     var fallbackSavesPath                         info.SavesDirectory                         info.SavesDirectoryFound                 savesError                 if (savesError !            var melonSw             Exception melonError                     var melonLoaderDir                         var melonLoaderPath                             info.MelonLoaderDirectory                             var logFiles                                 var logFilePath                                     info.MelonLoaderLogFile                                     info.MelonLoaderLogFound                                     var logFileInfo                     var melonLoaderPath                         info.MelonLoaderDirectory                         var logFilePath                             info.MelonLoaderLogFile                             info.MelonLoaderLogFound                 melonError                 if (melonError !                Main.logger?.Msg(1, "[DIR-RESOLVER] 📊 === GAME-BASED DIRECTORY DETECTION RESULTS ==                            var logFileInfo                 Main.logger?.Msg(1, "[DIR-RESOLVER] =========================================                var foundCount                 if (foundCount =                else if (foundCount >                else if (foundCount >                _initialized                 _directoryInfo }